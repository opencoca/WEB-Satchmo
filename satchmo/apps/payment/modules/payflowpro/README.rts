==============================
Satchmo payflow pro payment method
==============================

Payment module for satchmo in order to communicate with PayPal's PayflowPro
system (https://merchant.paypal.com/us/cgi-bin/?cmd=_render-content&content_ID=merchant/payment_gateway).

You will need a payflow gateway account, and a merchant bank account to link it to. At the moment of this writing, the service was available in the
United States, Australia, Canada and New Zealand only.

Dependencies
============

Python Libs
-----------

python-payflowpro (git://github.com/bkeating/python-payflowpro.git), it's
recommended that you install it using pip:
`$ pip install git+git://github.com/bkeating/python-payfowpro.git#egg=python-payflowpro`. If this doesn't work you might have an old version of git. Try with
`$ pip install -e git+git://github.com/bkeating/python-payflowpro.git#egg=python-payflowpro`, but I really recommend you upgrade pip if at all possible.

Installation
============

Setup
-----
simply add 'payment.modules.payflowpro' to your INSTALLED_APPS

Settings
========

No specific django settings for this app.

Livesettings
------------

When you activate this app, you will see a new PayflowPro Payment Settings tab
in your site's livesettings page. Here you can select whether to use real
payments or not, which types of credit cards you want to accept, whether to use
a capture or authorize-capture sales model, the name the user will see in the
checkout screens, and the URL this module will work under.

Most important are the Partner, Vendor, User, and Password settings. You will
receive this data from PayPal when you sign up for your account.

What Works
==========

Mainly, I've run and tested an authorize + capture and immediate sale workflows.
I've bought stuff and seen it marked as paid on satchmo, and the money be
credited on paypal's side.

TODO
=====

* write unit tests.
* test authorize + release (when you cancel an order) workflow
* write support for recurrent payments
* sort the livesettings options